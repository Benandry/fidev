/*! Boutons pour DataTables 2.3.2
 * © 2016-2022 SpryMedia Ltd - datatables.net/license
 */
!fonction ( e ) { "fonction" = = type de define & & define.amd?définir ( [ "jquery", "datables.net" ], fonction ( t ) { retourner e ( t, fenêtre, document ) } ): "objet" = type d'exportations?module.exports = function ( t, n ) { return t = t | | window, ( n = n | | ( "non défini"!= type de fenêtre?( "jquery" ): require ( "jquery" ) ( ) ) .fn.dataTable ) | document | "datables.net" (";var e = v.fn.dataTable, o = 0, C = 0, w = e.ext.buttons; function _ ( t, n, e ) { v.fn.animate?t.stop ( ) .fadeIn ( n, e ): ( t.css ( "display", "block" ), e & & e.call ( t ) > TAG1?t.stop ( ) .fadeOut ( n, e ): ( t.css ( "display", "none" ), e & & e.call ( t ) <TAG1cette instance de k ) ) fonction de retour ( t ) { retourne le nouveau k ( t, n ).conteneur ( ) };!0 = = = ( t = vide 0 = = t? = {: t } & ) t ( = {!0, { }, k.defaults, t ), t.buttons & ( this.c.buttons = t.buttons ), this.s = { dt: new e ( n ).addClass ( this.c.dom.container.className ) }, this._constructor ( ) v.ext } k.prototype, ( action: function { t, n ( <Tog1> tTog1?t.conf.action: ( t.conf.action = n, ce ) }, actif: fonction ( t, n ) { var t = this._nodeToButton ( t ) this.c.dom.dom.1?t.hasClass ( e ): ( t.toggleClass ( e, n = = x = | this |, this ) ) t, n, e },r = 0, a = i.length-1; r < a; r + + s ) s.buttons = [ i + r [ ] s.buttons,n = + i [ i.length-1 ] } retournez ceci._expandButton ( o, t, t!= = x?t.split: x, ( t = = = x | | t.split = = = | | = = t.split.length =!= = x,!1, n ), e!= = x&&!0!= = e | | this._draw ( ), this }, collectionRebuild: function ( t, n ) var e { this._nodeToButton = t ( t ); if (; if <TAG1>!= = x ) { pour ( var o = e.buttons.length-1; 0 < = ) this.remove ( e.buttons [ o ] ) <!= = x && i.config!= = x&&i.config.split!= = x,!0, i.parentConf!= = x && i.parentConf.split!= = x, o, i.parentConf ) } this._draw } e.collection, e.buttons ( ), container: function } ( ) return this.dom.dom.dom.Classainer> TAG1",!0 ), ce }, détruire: fonction ( ) { v ( "corps" ) .off ( "keyup." + this.s.namespace ); var t ( this.s.s.slice.s.s;n + + ) this.remove ( t [ n ] .node ); this.dom.container.remove ( ),activer: fonction ( t, n ) { revenir!1 = = = n?this.disable ( t ): ( n = this._nodeToButton ( t ), v ( n.node ) .removeClass ( this.cdom.button.disabled )",!1 ), ce ) }, indice: fonction ( t, n, e ) { | | n ( "", e = this.s.buttons =; pour ) var>.nœud = = = t ) retour n + o; si ( s && s.length ) { s = this.index ( t, o + "-", s ); si ( nul!= = s ) retour s } } retour null }, nom: fonction ( ) { retournez this.c.name }, noeud: function ( t )t = this._nodeToButton ( t ), v ( t.node ) ): this.dom.container } this.s.dt, o ( t, n ) var e <TAG1?v ( o.node ) .hasClass ( "traitement" ): ( v ( o.node ) .toggleClass ( "traitement", n ), v ( e.( ) .node ( ) ) .triggerHandler ( "buttons-procès.dt", [ this> (;if ( n.buttons.length ) for ( var i = n.buttons.length-1; 0 < = i; i-- ) this.remove ( n.buttons [ ]; node!0, n.conf.destroy&&n.conf.destroy.call ( o.button ( t ), o, v ( t ), n.conf ), this._removeKey ( n.conf ) n.nodem,n ) { fonction e ( t ) { fonction de retour "" = = type de t?t ( i, s, o.conf ): t } var o = this._nodeToButton ( t ), t = this.c.dom.collection.buttonLiner, t = ( o.inCollection&&&t&&&&&&&&t&t&&&&t&t&t.tag?t: this.c.dom.buttonLiner ) .tag, i = this.s.dt, s = v ( o.node ); retour n = = = x?e ( o.conf.text ): ( o.conf.text = n, ( t?s.children ( t ) .eq ( 0 ) .filter ( ": not ( .dt-down-arrow )" ): s ) e ( (:( ) { var e = this, t = this.s.dt, o = t.settings ( ) [, n ] this.c.buttons; o._buttons =;+ + ) this.add ( n [ i ]; t.on ) "destroy", function ( t, n ( ) n { = o & e.dest!= = y.body | | ( n = String.fromCharCode ( t.keyCode ) .toLowerCase ( ), -1!= = e.s.listenKeys.toLowerCase ( ) .indexOf ( n ) & & e._keypress ( n, t ) ) } , _ addKey <TAGain>?t.key: t ) .key ) }, _draw: function ( t, ) { | | t ( this.dom.container, n = this.s.buttons =, tTAG1>" "), n [ e ] .buttons & & n [ e ] .buttons.length & this._draw ( n [ e ] .collection, n [ e ].boutons ) }, _expandButton: function ( t, n, e, o, i, s, r ) { var a = this.s.dt, l =!1, u = Array.isArray ( n )?n: [ n ]; n = = = x & ( u = Array.isArray ( e )?e: [ e ] ), n!= = x && n.split!= = x & ( l =!0 ); pour ( var c = 0, d = u.length; c < d; c + + ) var f { this._resolveExtends = c (f.config = = = x | |!f.config.split ), Array.isArray ( f ) ) this._expandButton ( t, f, p!= = x&&p.conf!= = x?p.conf.split: x, o, r!= = x && r.split!= = x, s, r ); else { var p = this._buildButton ( f, o, f.split!= = x | | f.config!= = x&&f.config.split!= = x, i ); si ( p ) { si ( s!= = x & & null!= = s? (t.splice ( s, 0, p ), s + +: t.push ) p (, p.conf.buttons ) | p.conf.split | ) si { p.collection1>?this.c.dom.splitCollection: this.c.dom.collection ) .tag + "/ >" ), p.conf._collection = p.collection, p.conf.split ) pour ( 0; h = p.conf.parent = r, p.conf.split [ h ] .collectionLayout = = x & = p.conf.split ( h [ .collectionLayout ] p.conf.fade = p.conf.fade ); else v ( p.node ) .append ( v ( '< span class = "dt-down-arrow" > '+ this.c.dom.dom,!l, l, s, p.conf ) } p.conf.parent = r, f.init & f.init.call ( a.button ( p.node )?t ( h, l, n ): t } var s, r, a, l, u = this.c.dom.button, c = this.c.dom.buttonLiner, d = this.c.dom.collection, f = this.c< / span > ") .addClass (" dt-button-spacer "+ n.style +" + u.spacerClass ) .html ( n.text (!e && o && f?u = p:!e && t && d.button & ( u = d.button ),!e && o && f.buttonLiner?c = f.buttonLiner:!e && t && d.buttonLiner & ( c = d.buttonLiner ), n.available&&!n.disponible ( h, n )&&!n.hasOwnProperty ( "html" ) ) retour!1; n.hasOwnProperty ( "html" )?l = v ( n.html ): ( s = fonction ( t, n, e, ) { o.action.call ( n.button ( e ), n ),o ] ) }, r = n.tag | | u.tag, a = n.clickBlurs = <Class1> = x = | n.clickBlurs, l | v?this.c.dom.splitDropdownButton.className:"") .attr (" tabindex ", this.s.dt.settings ( ) [ .iTabIndex ] .attr )" aaria-controls ", this.s.dt.table ( ( ) ( ) <TAG1,!l.hasClass ( u.disabled ) && n.action && s ( t, h, l, n ), a & l.trigger ( "blur" ) } .sur ) "keypress.dtb", fonction ( ( t,!l.hasClass ( u.disabled ) ) && n.action && s ( t, h, l, n ) }, "a" ) = = r.toLowerCase = "p = v ( "<" + c.tag + "/ >" ) ( i ( n.text ) ) .Class (,!1 = = = n.enabled && l.addClass ( u.disabled ),n.className && l.addClass ( n.className ), n.titleAttr && l.attr ( "title", i ( n.titleAttr ) ), n.attr & & l.attr (!= = x&&n.config.split&&( n.split = n.config.split ) ); var b, g, m, y, f = this.c.dom.buttonContainer, d = f&f.tag?( "<" + f.tag + "/ >" ) .addClass ( n ) .append ( l ): l; reformated this._addKey ( n ) n ( n =.addClass ( this.c.dom.splitWrapper.className ) ) .append ( l ), g = v.ext ( n, { text: this.c.dom.split:!1, attr: { "aria-haspopup": "dialog", "aria-expanded":!1 }, aligner: this.c.dom.splitDropdown.align, splitAlignClass: this.c.dom.splitDropdown.splitAlignClass } ), this._addKey ( g ), m = function ( t, n, e, ) { w.split.action.call ( n.button (,o ] ), e.attr ( "aria-expanded",!0 ) }, y = v ( < classe de boutons = "'+ this.c.dom.splitDropdown.className +' dt-button "> span class <" ddown",( t ) { t.preventDefault ( ), t.stopPropagation ( ), y.hasClass ( u.disabled ) | m |,y.hasClass ( u.disabled ) | m | t, h, y, g ( ) ), 0 } ) = n.split.length & & y.addClass = <TAG1?b: l ) .obtenir ( 0 ), insérer: e?b: d,boutons: [ ], inCollection: t, isSplit: e, inSplit: o, collection: null } } _nodeToButton: function ( t, n ) { var e ( 0, o =.noeud = = = t ) retour n [ e ]; si ( n [ e ] .buttons.length ) var i { this._nodeToButton =,o = ( n = n | | this.s.buttons ) .length; e < + + ) if { n ( e [ <;if ( i ) return i } } },_keypress: function ( s, r ) { t |,e = t [ o ] .node,!n.key | | n.key!= = s & (!v.isPlainObject ( n.key ) | | n.key.key!= = s | | n.key.shiftKey&&!r.shiftKey | | n.key.altKey&&!r.altKey | | n.key.ctrlKey&&!r.ctrlKey | | n.key.metaKey&&!r.metaKey ) | | ( r._buttonsHanded =!0, v ( e ) .cliquez sur ( ) ), t [ o ] .buttons.length && a ( t [ o ].boutons ) } ) ( this.s.buttons ) }, _removeKey: function ( t ) { t ? TAG1> ( = v.isPlainObject ( t?t.key: t ) .key, n = this.s.listenKeys.split ( "" ), t = v.inArray ( t, n ), n.splice ( t, 1 );!v.isPlainObject ( t )&&!Array.isArray ( t ); ) { si ( t = = = x ) retour; si ( "fonction" = = type de t ) > {! (t = t.call ( i, s, e ) ) ) retour!1 } else if ( "chaîne" = = type de t ) { if (!w [ t ] ) retour { ht: }; t = w [ t ] } if ( < + n + lancer "Boutons: Trop d'itérations?t: v.extension ( { }, t ) } var n, o, i = this, s = this.s.dt; for ( e = e (; e & & e.extend; <TAG1!w [ e.extension ] ) throw "Impossible d'étendre le type de bouton inconnu:" + e.ext; var r = t ( w [ rtend ] ); if ( r!r ) retour!1; var a = r.className, l = ( e.config!= = x && r.config!= = x & ( e.config = v.étendre ( { }, r.config, e.config ) ), e = v.extension ( { }, r, e ), a & & e.className!= = a & ( e.className = a + "+ e.className ), e.postfixButtons ); if ( l ) {;e.postfixButtons = null } var u = e.prefixButtons; if ( u ) { e.buttons ( | | e.buttons ( =,_popover: function ( o, t, n, e ) { function i ( ) { h =!0, A ( v ( ".dt-button-collection" ), b.fade, function ( ) v { this ( .detach ) ( ) >"aria-expanded "," false "), v (" div.dt-button-background ") .off (" click.dtb-collection "), k.background (!1, b.backgroundClassName, b.fade, g ), v ( m ) .off ( "resize.resize.dtb-collection" ),v ( "corps" ) .off ( ".dtb-collection" ), f.off ( "buttons-action.b-interne" ), f.off ( "destroy" ) var s, r, a, l, u, u, u, u, c, c, c, c!1, b = v.extension ( { aligner: "bouton-gauche", autoFermer:!1, fond:!0, backgroundClassName: "dt-button-background", closeButton:!0, contentClassName: p.dom.collection.className, collectionLayout: "", collectionTitle: "", dropup:!1, fondu: 400, popoverTitle: "", rightAlignClassName: "dt-button-right", tag: p.dom.collection.tag }, n ), g = t.node ( );!1 = = = o?( ): ( ( p = v ( f.buttons ( [ aaria-haspopup = ],i ( ) ), n = v ( ".dt-button", o ) .length, p = "", 3 = = = n?p = "dtb-b3": 2 = = = n?p = "dtb-b2":1 = = = n & ( p = "dtb-b1" ), s = v ( <Classe 1> TAG1> < .addClass >"aria-modal":!0, role: "dialog" } ), o = v ( o ) .addClass ( b.contentClassName ) .attr ( "rôle", "menu" ) s > TAG1>!= = y.body & ( g = y.body.lastChild ), b.popoverTitle?s.prepend ( '< div class = "dt-button-collection-title" > '+ b.popoverTitle + "<'< div class = "dtb-popover-close" > x </div > ') .addClass ( "dtb-collection-closeable" ), _ ( s.insertAfter ( g ) ) 1s"!= = b.span & "dt-container"!= = b.align | | ( g = g.parent ( ), s.css ( "largeur", n. largeur ( ) ), " absolu "p = v ( g [ 0 ] .offsetParent ), t = g.position ( ),r.bottom = r.top + r.height, p = t.top + g.outerHeight ( ) t.left, s.css = top: p, left: u ( {,c.marginTop = parseFloat ( l.marginTop ), c.marginBottom = parseFloat ( l.marginBottom ), b.dropup & ( p = t.top-c.height-c,"bouton droit"!= = b.align&&!s.hasClass ( b.rightAlignClassName ) | | u ( t.left-c.width = g.outerWidth + ( ), "dt-container"!= = b.align & "conteneur"!= = b.align | | ( u = u < u ) u + > c.gauche> TAG1> r.width & ( u = r.width&&( u = -n.left ), a.top + p + c.height > v ( .scrollTop ) (,s.css ( { top: p, left: u } ) ) ( d ( function = ( ) var t { v = .height (?t: n ) ) } ) (, v ) m ( .sur ) "resize.dtb-groundlection", fonction ( ( d ) { <TAG1!0, b.backgroundClassName, b.fade, b.backgroundHost | | g ), v ( "div.dt-button-background" ) .on ("click.dtb-collection ", fonction ( ) { } ), b.autoClose & & setTimeout ( fonction ( ) f.on {" buttons-action.b-interne ", fonction ( t!= = g [ 0 ] & & i ( ) } ), 0 }, v ) s ( .trigger ) "Buttons-popover.dt" <Time1>!1, v ( "corps" ) .sur ( "click.dtb-collection", fonction ( t ) { var n, e;!h & ( n = v.fn.addBack?"addBack ":" andSelf ", e = v ( t.target ) .parent ( ) [ 0 ],!v ( t.target ) .parents ( ) [ n ] ( ) .filter ( o ) .length&&!( e ) .hasClass ( "dt-buttons" ) | v | t.target ( .hasClass ) "dt-button-background" ( & )"keydown.dtb-collection ", fonction ( t ) { var n = v (" a, bouton ", o ), e = y.activeElement; 9 = = t.keyCode && <TAG1n.premier ( ) .focus ( ), t.prevenDefault ( ) ): t.shiftKey?= = = n [ 0 ] & ( n.last ( ) .focus ( ),e, o ) { e = = = x & ( e = 400 ), o = o | | y.body, t?_ ( v ( "< div / >" ) .addClass ( n ) .css ( "display", "none" ) .insertAprès ( >.supprimer ( ) } ) }, k.instanceSelector = function ( t, i ) { var s, r, a; retour t = = x = null <TAG1?v.map ( i, fonction ( t ) { retour t.inst } ) s ( = [;e < o; e + + ) a ( t [ e ] ); else "chaîne" = = type de t? -1!= = t.indexOf ( "," )?a ( t.split ( "," ) ): -1!= = ( n = v.inArray ( t.trim ( ), r ) ) && s.push ( i [ .inst ]: "nombre?s.push ( i [ t ] .inst ): "objet" = = type de t&&s.push ( t ) } ) t (, s ) ), k.buttonSelector } function = t, n ( ) var u {;s + + ) ( o = n [ s ] && ) t.push ( ( noeud: o.node, nom: o.conf.name, idx: i { e!= = x?e + s: s + "" } ), o.buttons ) & & c ( t, o.buttons, i + ) var e;si ( Array.isArray ( t ) | | t instance de v ) pour ( s = 0, r = t < s; s + + d ) t"*"= = = t ) pour ( s = 0, r = e.length; s < + s +;sinon si ( "chaîne" = = type de t ) si ( -1!= = t.indexOf ( "," ) ) pour ( var i = t.split ( )\d + ) * $ / ) ) { var a = v.map ( e, function ( t ) { }; u.push ( { inst: n, node: e [ v.inArray ( t, a ) ] .node } ) else if } -1!= = t.indexOf ( ": name" ) ) var l { t.replace = ": name", "" (; for ) s ( 0, r = e.length; s = TAG1>.nœud } ) } else v ( o ) .filter ( t ) .chaque ( fonction ( ) u.push { ( inst: n, noeud: this <TAG1!= = ( a = v.inArray ( t, o ) ) & & u.push ( {, e <,k.stripData = fonction ( t, n ) { retour "chaîne" = = type de t & ( t = t ( t.replace = / ( script <?!< \ / script > ) < [ ^ < ] * ) \ / script < / gi, "" > ) .replace ) > /( > <TAG1TAG1>!\- \ -.*?\- \ - > / g, "" ), n&&!n.stripHtml | | ( t = t.replace ( / < [ ^ > ] * > / g, ") ), n&&!n.trim | | ( t = t.replace ( / ^\ s + | \ s + $ / g, "" ) ) , n&&!n.stripNewlines | | ( t = t.remplacer ( / \ n / g, "" ) ),!n | | n.decodeEntités ) & ( l.innerHTML = t, = l.value ), t }, k.defaults = { "copy", " cs",className: "dt-buttons" }, collection: { tag: "div", className: "" }, bouton: { tag: "button", className: "dt-button", actif: " désactivé", désactivé ", spacerClass:" }:""}, divisé: { tag: "div", className: "dt-button-split" }, splitWrapper: { tag: "div", className: "dt-btn-split-wrapper" }, splitDropdown:"dt-btn-split-drop ", aligner:" split-right ", splitAlignClass:"dt-button-split-left" }, splitDropdownButton: { tag: "button", className: "dt-btn-split-drop-button dt-button" }, splitCollection: { tag: "div:{ texte: fonction ( t ) { retour t.i18n ( "buttons.collection", "Collection" ) }, className: "buttons-collection", closeButton :! (k.version = "2.3.2" ), init: function ( t, n, e ) { n.attr ( "aria-expanded",!1 ) }, action: fonction ( t, n, e, o ) { o._collection.parents ( "corps" ) .longueur?this.popover (!1, o ): this.popover ( o._collection, o ), "keypress" = = t.type & & v = "a, button", o._collection ( 0 ):{ texte: fonction ( t ) { retour t.i18n ( "buttons.split", "Split" ) }, className:"boutons-split ", closeButton:!1, init: function ( t, n, e ) { return n.attr ( "aria-expanded",!1 ) }, action: fonction ( t, n, e, o ) { this.popover ( o._collection, o ) }, attr: { "aria-haspopup": "dialog" }&&w.csvHtml5.available ( t, n ) ) return "csvHtml5" }, excel: function ( t, n ) if { w.excelHtml5 && w.excelHtml5.available > TAG1>,pageLongueur: fonction ( t ) { var n = t.settings ( ) 0 [ .aLengthMenu, e ] = [ ] =;i + + ) { var s = n [ i ]; v.isPlainObject ( s )? (e.push ( s.value ), o.push ( s.label ) ): ( e.push ( s ), o.push ( s ) ) retourner }.i18n ( "buttons.pageLength", { "-1": "Afficher toutes les lignes", _: "Afficher les lignes% d" }, t.page.len ( ) ) , nom de classe: "boutons-longueur de page", autoFermerdre:!0, boutons: v.map ( e, fonction ( s, t ) { retour { texte: o [ t ], className: "button-page-length", action: function ( t ) n.page.len <TAG1,) { fonction o ( ) { i.active ( t.page.len ( ) = = s = var i ) this; t.on } "length.dt,e ) { var o = this; t.on ( "length.dt" + e.namespace, function ( ) o.text { e.text ( ):!0, texte: fonction ( t ) { retour t.i18n ( "buttons.spacer", "" ) } } },this.selector.buttonGroup = n; var t = this.iterator (!0, "tableau", fonction ( t ) { si ( t._buttons ) retour k.buttonSelector ( k.instanceSelector ( n, t._buttons ), e ) },!0 ); retour t._groupSelector = n, t } ), e.Api.register ( "bouton ( )", fonction ( t, ) { this.buttons =","bouton ( ) .active ( ) ", fonction ( n ) { retour n = = = x?this.map ( function ( t ) return t.inst.active { t.node ( ) } this.each ) function ( t ( ) t.inst.active { t.node?this.map ( function ( t ) return t.inst.action { t.node ( ) }: this.each ) function ( t ( t.inst.action ) t.node",fonction ( e ) { restituer ceci.chaque ( fonction ( ) pour { var n ( 0; n = e.length; n < + +"( ) .enable ( ) "," bouton ( ) .enable ( ), fonction ] n ( ),( ) { restituer ceci.chaque ( fonction ( ) t.inst.disable { t.node ( )!= = t & ( n = t ) } ) } ), e.Api.registerPlural ( "bouton ( ) 1;retour v ( this.each ( function ( t ) { n.add = t.inst.node ( t.node ( ) ) } ).traitement ( ) ", fonction ( n ) { retour n = = = x?this.map ( function ( t ) return t.inst.processing { t.node ( ) }: this.each ) function ( t ( t.inst.procing ) t?this.map ( function ( t ) return t.inst.text { t.node ( ) }: this.each ) function ( t ( t.inst.text ) t.node",fonction ( ) { restituer ceci.chaque ( fonction ( ) t.inst.node { t.pop ( .trigger ) "clic" ( ) <TAG1,this.button ( this [ 0 ] .node ), e ) } ) }, e.Apiurn ) "buttons ( (!0, "tableau", fonction ( t ) { si ( t._buttons ) pour ( var n = k.( s, t._buttons ), e = 0, o = n.length; e < o; e + + i ) i.add = n ( e [.eq ( 0 ) } ), e.Api.register ( "bouton ( ) (", fonction ) t, n, e ( ) var o { this.contextance>,t, e ), this.button ( this._groupSelector, t ) } ) "TAG1>" buttons ( ( .destroy ) ( ", fonction ).( ) "," boutons ( ) .supprimer ( ) ", fonction ( ) renvoyer ceci. chaque { fonction ( t ( ) t.inst.remove { t!1 = = = t? (this.off ( "destroy.btn-info" ), A ( v ("#datables_buttons_info ") 400, fonction ( ) { v ( this ) .supprimer ( ) tAGat> 1?"< h2 > "+ t +" < / h2 > ":" ",_ ( v (" div <"= = type de n?"html ":" append "] ( n ) ) .css (" display "," none ") .appendTo (" body ") ), e!= = x & 0!= = e & ( i = setTimeout ( fonction ( ) { o.buttons.info (!1 ) }, e ) ), this.on ( "destroy.btn-info", function ( ) { o.buttons.info (!1 ) } ) ), ce } ), e.Api.register ( "buttons.exportData ( ) 1, fonction ( t ) if { this.context.lengthis.length <Taw>.( "buttons.exportInfo ( )", fonction ( t ) { retour { nom de fichier: n ( t = t | | {,n = fonction ( t ) { var n; retour ( n = "fonction" = = typeof ( n = "*" = = t.filename&&"*"!= = t.title && t.title!= = x & & null!= = t.title&&""!= = t.title?t.title: t.filename )?n ( ): n ) = = = x | | null = = = n?null: ( n = ( n = -1!= = n.indexOf ( "*" )?n.replace ( "*", v ( "tête > titre" ) .texte ( ) .trim ) (: n ) .replace ) / ( ^ a-zA-Z0-9_________ \ u0 !\( \ ) ] / g, "" ) ) + s ( t.extension ( ) | "" | ) fonction } t <T?null: "function" = = type de t?t ( ): t }, r = function ( t ) { s = t.title (; retour null ) = = t?null: -1!= = t.indexOf ( "*" )?t.replace ( "*", v ("titre de tête > ") .text ( ) |" Données exportées "|: t ), a } fonction = t, n, e ( ) s { n =?null: ( t = v ( "caption", t.table ( ) .conteneur ( ) ) .eq ( 0 ), "*" = = n?t.css ( "côté légende" )!= = e?null: t.length?t.text ( ): "": n ) }, l = v ( "< textarea / >" ) 0 [, u ] function = e)!0, { }, { rails: null, colonnes: "", modificateur: { recherche: "appliqué", ordre: "appliqué" }, orthogonal: "display", stripHtml:!0, stripNewlines:!0, decodeEntités:!0, trim:!0, format: { en-tête: fonction ( t ) { retour k.stripData ( t, o ) } t, fonction ( t ) tTAG1.carte ( fonction ( t ) { var n = e.column ( t ) .header ( ) .to?e.columns ( o.columns ) .index ( ).carte ( fonction ( t ) { var n = e.column ( t ) .footer ( ); retour o.format.footer ( n?n.innerHTML: "", t, n ) } ) .toArray ( ): null, i = v.extend ( { }, o.modifier ) <TAG1:!0 }, i ) ) .tout ( ) && v.extension ( i, { sélectionné:!0 } ), e.rows ( o.rows, i ) .index ( ) ( ) TAG1>, i ) e.cells = i, o.columns (, s > TAG1>,d = 0 < a?s.length / a: 0; c < d; c + + ) pour { var f ( = a [ p ] a; p = < + f +;l [ c ] = f } i = { header: t, footer: n, body: }; return o.customizeData & & o.customizeData ( i ),n ) .conteneur ( ) } retour v.fn.dataTable.Buttons = k, v.fn.DataTable.Buttons = k, v ( y ) "init.dt plugin-init.dt",fonction ( t, n ) { "dt" = = = t.namespace & ( t = n.oInit.buttons | | e.defaults.buttons )&&!n._buttons & new k ( n, t ) .conteneur ( ) }, e.ext.feature.push ) ( fnInit: t, cFeature: "B" { }, e.ext;